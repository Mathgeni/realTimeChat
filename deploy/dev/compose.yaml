version: "3.9"


services:
  kafka:
    image: 'bitnami/kafka:latest'
    container_name: kafka
    ports:
      - 9094:9094
    logging:
      driver: none
    environment:
      - KAFKA_BROKER_ID=0
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_ADVERTISED_HOST_NAME=kafka

  db:
    image: docker.io/library/postgres:15.2-alpine
    restart: unless-stopped
    ports:
      - 5432:5432
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ./data:/var/lib/postgresql/data

  app:
    container_name: app
    build:
      context: ../../
      dockerfile: deploy/Dockerfile
    restart: unless-stopped
    depends_on:
      - kafka
      - db
    environment:
      - STAGE=DEV
    env_file:
      - .env
    ports:
      - "${API_PORT}:${API_PORT}"
    command: bash -c "
        python -m src.main
      "
